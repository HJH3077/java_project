
switch문 : if문은 조건은 boolean형인데 비해 switch의 조건은 정수형 int, char와 String(충분한 버전일 경우)이다.
형식 : switch(인자값){
	case 조건값 : 
	수행문; break; // break는 조건마다 넣는게 적당함. 무조건 넣는건 아님 상황에 따라 안넣을 수도 있음.
		       // why? : switch문은 break를 만날 때까지 모든 수행문을 수행하기 때문에
	case 조건값2 :
	수행문; break;

	...
	deafult :
	수행문; (break; 생략가능. 어차피 마지막이어서)
	}
			// 주의사항 : case의 조건값이 중복되면 안됨.

====================================================================

for문 : 특정 명령들을 정해진 규칙에 따라 반복처리 할 때 사용하는 제어문이다.
형식 : for(초기식; 조건식; 증감식){
	수행문1;
	수행문2;
	}

 - 초기식 : 가장 먼저 수행되는 부분으로 다시 수행 x (다중 for문은 예외)
 - 조건식 : 초기식 다음으로 수행하는 부분으로 loop가 돌 때마다 한번씩 비교하여 반복수행할지 for문을 벗어날지 결정.
 - 증감식 : loop를 수행할 때마다 조건식에서 비교하기 전에 수행하여 조건식에 사용될 변수값을 증감시켜 
	    loop를 원활하게 수행하거나 무한 루프를 피하는 바탕이 되는 부분.
	    

다중 for문 : 단일 for문에서 끝나는 것이 아니라 그거을 다시 여러번 반복하는 제어문이다. 즉, for문 안에 for문이 있는 경우
	예) 애국가 1~4절 3번부르기
	for(초기식1;조건식1;증감식1){ 		  // 3번 부르기
		for(초기식2;조건식2;증감식2){     // 1~4절 부르기
			명령어2;   
		}
		명령어1; 
	}


======================================================================

while문 : for문과 유사하며 조건비교에 만족 할 때에만 반복처리하는 제어문.
형식 : 	초기식
	while(조건식){
		명령어;
		증감식;
	}

자주쓰는 변형시킨 방법 : 조건식에 true를 줘서 무한루프를 만든 후 if문과 break를 줘서 빠져나오게함